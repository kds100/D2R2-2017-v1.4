"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var file_system_1 = require("tns-core-modules/file-system");
var common_1 = require("./common");
var FileStore = (function (_super) {
    __extends(FileStore, _super);
    function FileStore() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FileStore.prototype.makeUploadRequest = function (url, file, metadata, options) {
        var filePath = file instanceof file_system_1.File ? file.path : file;
        var worker = new common_1.FileUploadWorker(__dirname, './file-upload-worker');
        options.headers['content-type'] = metadata.mimeType;
        options.headers['content-range'] = "bytes " + options.start + "-" + (metadata.size - 1) + "/" + metadata.size;
        return worker.upload({ url: url, metadata: metadata, options: options, filePath: filePath });
    };
    return FileStore;
}(common_1.CommonFileStore));
exports.FileStore = FileStore;
